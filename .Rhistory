df_y <- df[2]
plot_gbarras <- ggplot(df, aes(x=df_x, y=df_y) +
geom_bar(stat = "identity"))
print(plot_gbarras)
}
gbarras(df_r)
gbarras <- function(df) {
df_x <- df[1]
df_y <- df[2]
plot_gbarras <- ggplot(df, aes(x=df_x, y=df_y) +
geom_bar(stat = "identity"))
print(df_x)
}
gbarras(df_r)
df_r$1
gbarras <- function(df) {
df %>% rename(x=df[1], y=df[2])
plot_gbarras <- ggplot(df, aes(x=x, y=y) +
geom_bar(stat = "identity"))
print(df_x)
}
gbarras(df_r)
df_x <- names(df_r)[1]
print(df_x)
gbarras <- function(df) {
df_x <- names(df)[1]
df_y <- names(df)[2]
plot_gbarras <- ggplot(df, aes(x=df_x, y=df_y) +
geom_bar(stat = "identity"))
print(df_x)
}
gbarras(df_r)
gbarras <- function(df) {
df_x <- names(df)[1]
df_y <- names(df)[2]
plot_gbarras <- ggplot(df, aes(x=df_x, y=df_y) +
geom_bar(stat = "identity"))
}
df_x <- names(df_r)[1]
df_y <- names(df_r)[2]
plot_gbarras <- ggplot(df, aes(x=df_x, y=df_y) +
geom_bar(stat = "identity"))
plot_gbarras <- ggplot(df_r, aes(x=df_x, y=df_y) +
geom_bar(stat = "identity"))
gbarras <- function(df) {
x <- df[1]
y <- df[2]
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y) +
geom_bar(stat = "identity"))
}
gbarras(df_r)
x <- df_r[1]
y <- df_R[2]
data <- data.frame(x, y)
y <- df_r[2]
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y) +
geom_bar(stat = "identity"))
ggplot(data, aes(x=x, y=y) +
geom_bar(stat = "identity"))
View(data)
View(data)
View(x)
x <- c(df_r[1])
print
print(x)
x <- c(df_r[1])
y <- c(df_r[2])
data <- data.frame(x, y)
View(data)
data <- df_r %>% mutate(x = df_r[1], y = df_r[2])
View(data)
x <- as.vector(df_r[1])
y <- as.vector(df_r[2])
data <- data.frame(x, y)
View(data)
data <- data %>% mutate(x = x, y = y)
View(data)
x <- df_r[1]
y <- df_r[2]
data <- data.frame(x, y)
View(data)
data <- data %>% mutate(x = x, y = y)
ggplot(data, aes(x=x, y=y) +
geom_bar(stat = "identity"))
data <- data %>% mutate(x = x, y = y)
View(data)
x <- pull(df_r, names(df_R)[1])
x <- pull(df_r, names(df_r)[1])
y <- pull(df_r, names(df_r)[2])
data <- data.frame(x, y)
View(data)
gbarras <- function(df) {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y) +
geom_bar(stat = "identity"))
}
gbarras(df_r)
ggplot(data, aes(x=x, y=y) +
geom_bar(stat = "identity"))
View(data)
j <- pull(df_r, names(df_r)[1])
k <- pull(df_r, names(df_r)[2])
data <- data.frame(j, k)
ggplot(data, aes(x=j, y=k) +
geom_bar(stat = "identity"))
View(data)
ggplot(df_r, aes(x=Revisor, y=media_plazo)) +
geom_bar(stat = "identity")
ggplot(data, aes(x=j, y=k)) +
geom_bar(stat = "identity")
gbarras <- function(df) {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity")
}
gbarras(df_r)
gbarras <- function(df) {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity")
return(plot_gbarras)
}
gbarras(df_r)
gbarras <- function(df, a, b) {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity")+
xlab(a)+
ylab(b)
return(plot_gbarras)
}
gbarras(df_r, juan, sofia)
gbarras(df_r, "juan", "sofia")
gbarras <- function(df, a="x", b="y") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity")+
xlab(a)+
ylab(b)
return(plot_gbarras)
}
gbarras(df_r)
gbarras <- function(df, a="x", b="y") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity")+
xlab(a)+
ylab(b)
return(plot_gbarras)
}
gbarras(df_r, "juan", "sofia")
gbarras(df_r)
gbarras <- function(df, a="", b="") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity")+
xlab(a)+
ylab(b)
return(plot_gbarras)
}
gbarras(df_r)
gbarras <- function(df, a="", b="", titulo="", subtitulo="") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity")+
xlab(a)+
ylab(b)+
labs(title = titulo, subtitle = subtitulo)
return(plot_gbarras)
}
gbarras(df_r, titulo = "GRÁFICO 1", subtitulo = "Plazo promedio de atención")
source("~/github/r_dfi/explorando_data_dfi.R", echo=TRUE)
gbarras(df_r, titulo = "GRÁFICO 1", subtitulo = "Plazo promedio de atención")
gbarras(df_r)
gbarras(df_r, "juan", "sofia")
gbarras(df_r, titulo = "GRÁFICO 1", subtitulo = "Plazo promedio de atención")
gbarras(df_r)
source("~/github/r_dfi/explorando_data_dfi.R", echo=TRUE)
gbarras <- function(df, a="", b="", titulo="", subtitulo="") {
granate <- '#c21453'
naranja <- '#ea8714'
amarillo_anarajando <- '#f3b425'
gris <- '#848484'
hueso <- '#f3efe7'
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity")+
xlab(a) +
ylab(b) +
labs(title = titulo, subtitle = subtitulo) +
scale_color_manual(values=c(granate, naranja, amarillo_anarajando, gris, hueso))
return(plot_gbarras)
}
source("~/github/r_dfi/explorando_data_dfi.R", echo=TRUE)
source("~/github/r_dfi/explorando_data_dfi.R", echo=TRUE)
source("~/github/r_dfi/explorando_data_dfi.R", echo=TRUE)
gbarras <- function(df, a="", b="", titulo="", subtitulo="") {
granate <- '#c21453'
naranja <- '#ea8714'
amarillo_anarajando <- '#f3b425'
gris <- '#848484'
hueso <- '#f3efe7'
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity")+
xlab(a) +
ylab(b) +
labs(title = titulo, subtitle = subtitulo) +
scale_color_manual(values=c(granate, naranja, amarillo_anarajando, gris, hueso))
return(plot_gbarras)
}
gbarras(df_r)
gbarras <- function(df, a="", b="", titulo="", subtitulo="") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity", color="black", fill='#c21453')+
xlab(a) +
ylab(b) +
labs(title = titulo, subtitle = subtitulo)
return(plot_gbarras)
}
gbarras(df_r)
gbarras <- function(df, a="", b="", titulo="", subtitulo="") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity", color="black", fill=granate)+
xlab(a) +
ylab(b) +
labs(title = titulo, subtitle = subtitulo)
return(plot_gbarras)
}
gbarras(df_r)
granate <<- '#c21453'
gbarras <- function(df, a="", b="", titulo="", subtitulo="") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity", color="black", fill=granate)+
xlab(a) +
ylab(b) +
labs(title = titulo, subtitle = subtitulo)
return(plot_gbarras)
}
gbarras(df_r)
naranja <<- '#ea8714'
amarillo_anarajando <<- '#f3b425'
gris <<- '#848484'
hueso <<- '#f3efe7'
escala_indecopi <<- c(granate, naranja, amarillo_anarajando, gris, hueso)
gbarras <- function(df, a="", b="", titulo="", subtitulo="") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity", color="black", fill=amarillo_anarajando)+
xlab(a) +
ylab(b) +
labs(title = titulo, subtitle = subtitulo)
return(plot_gbarras)
}
gbarras(df_r)
View(df)
library(Microsoft365R)
library(readxl)
library(dplyr)
library(ggplot2)
site <- get_sharepoint_site("Grupo Teletrabajo GSF") # Accede al Sharepoint (la primera vez pedirá usuario y clave, hay que tramitar permiso de administrador con OTI)
drv <- site$get_drive('Documentos') # Dentro del Sharepoint, accede a la carpeta "Documentos"
drv$download_file("Bases y supervisiones/Bases de datos/2023/BBDD - Base Expedientes DFI 2023.xlsx", dest="bd_exp_2023.xlsx") # Descarga la BD seleccionada
df <- read_xlsx("bd_exp_2023.xlsx", sheet = "BBDD", skip=1) # Genera un objeto en R con la información del archivo en excel
as.data.frame(df) # Convierte el objeto en un dataframe
rm(drv, site) # Quitamos los objetos innecesarios del ambiente de trabajo
save(df, file="bd_exp_2023.RData") # Guardar el objeto "df" en un archivo .RData (obsérvese el peso del archivo excel en comparación)
rm(df) # Eliminamos el objeto "df" del ambiente de trabajo
load("bd_exp_2023.RData") # Cargamos el objeto "df" desde el archivo .RData
file.remove("bd_exp_2023.xlsx", "bd_exp_2023.RData") # Elimina los archivos listados
dim(df) # Obtiene el número de filas y columnas
nrow(df) # Obtiene el número de filas (observaciones)
ncol(df) # Obtiene el número de columnas (variables)
names(df) # Obtiene los nombres de las columnas del dataframe
summary(df) # Muestra un resumen de la información de cada columna
summary(df$GRUPO_ESTANDARIZADO) #Es posible aplicar summary para una o varias columnas seleccionadas
table(df$Revisor) # Muestra un conteo de los valores de una columna
prop.table(table(df$Revisor)) # Muestra la información de table
f1 <- filter(df, Revisor == "Ivette Sánchez") # Filtra columnas por sus valores (ver el nuevo objeto en el ambiente)
View(f1)
s1 <- df %>% select('N° de Expediente', Revisor, GRUPO_ESTANDARIZADO, RUC) # Selecciona columnas por sus nombres
sn <- df %>% rename(expediente = 'N° de Expediente', jefe_de_equipo = Revisor, grupo = GRUPO_ESTANDARIZADO, ruc = RUC) # Cambia los nombres de las columnas indicadas
View(sn)
str(df$RUC) # Observar que RUC contiene datos del tipo "chr", es decir tipo texto.
df2 <- df %>% mutate(RUC = as.numeric(df$RUC)) # Como el RUC es un número, puede ser formateado como tal
str(df2$RUC) # Ahora el RUC de df2 es un dato tipo "num"
df_r <- df %>%
group_by(Revisor) %>% # Define la variable que será utilizada para agrupar los datos
summarise(media_plazo = mean(plazo, na.rm = TRUE)) # Proporciona la media por agrupamiento
df <- df %>% rename(plazo = 'Plazo para la tramitación (meses)') # Es importante cambiar el nombre de la columna (caso contrario puede presentar errores)
df_r <- df %>%
group_by(Revisor) %>% # Define la variable que será utilizada para agrupar los datos
summarise(media_plazo = mean(plazo, na.rm = TRUE)) # Proporciona la media por agrupamiento
View(df_r)
ggplot(df_r, aes(x=Revisor, y=media_plazo)) +
geom_bar(stat = "identity")
ggplot(df_r, aes(x=Revisor, y=media_plazo)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(df_r, aes(x="", y=media_plazo, fill=Revisor)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
ggplot(df_r, aes(x=Revisor, y=media_plazo)) +
geom_segment( aes(x=Revisor, xend=Revisor, y=0, yend=media_plazo), color="skyblue") +
geom_point( color="blue", size=4, alpha=0.6) +
theme_light() +
coord_flip() +
theme(
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
granate <<- '#c21453'
naranja <<- '#ea8714'
amarillo_anarajando <<- '#f3b425'
gris <<- '#848484'
hueso <<- '#f3efe7'
escala_indecopi <<- c(granate, naranja, amarillo_anarajando, gris, hueso)
gbarras <- function(df, a="", b="", titulo="", subtitulo="") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity", color="black", fill=amarillo_anarajando)+
xlab(a) +
ylab(b) +
labs(title = titulo, subtitle = subtitulo)
return(plot_gbarras)
}
View(df_r)
gbarras(df_r)
site <- get_sharepoint_site("Grupo Teletrabajo GSF") # Accede al Sharepoint (la primera vez pedirá usuario y clave, hay que tramitar permiso de administrador con OTI)
drv <- site$get_drive('Documentos') # Dentro del Sharepoint, accede a la carpeta "Documentos"
source("~/github/r_dfi/explorando_data_dfi.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
gbarras(df_r)
gbarras <- function(df, a="", b="", titulo="", subtitulo="") {
x <- pull(df, names(df)[1])
y <- pull(df, names(df)[2])
data <- data.frame(x, y)
plot_gbarras <- ggplot(data, aes(x=x, y=y)) +
geom_bar(stat = "identity", color="black", fill=amarillo_anarajando)+
xlab(a) +
ylab(b) +
labs(title = titulo, subtitle = subtitulo)
return(plot_gbarras)
}
gbarras(df_r)
amarillo_anarajando <<- '#f3b425'
gbarras(df_r)
knitr::opts_chunk$set(echo = TRUE)
gbarras(df_r)
tamanno_muestra <- function(p,c,e,N){
no=(p*(1-p))/((e/qnorm((1-c)/2))^2)
n_o=ceiling(no)
nf=n_o/(1+(n_o/N))
n_f=ceiling(nf)
return(n_f)
}
tamanno_muestra(0.5, 0.95, 0.03, 3000000)
tamanno_muestra(0.5, 0.95, 0.05, 3000000)
tamanno_muestra(0.5, 0.98, 0.10, 3000000)
tamanno_muestra(0.5, 0.90, 0.10, 3000000)
tamanno_muestra(0.5, 0.95, 0.03, 3000000)
tamanno_muestra(0.5, 0.95, 0.03, 3000)
tamanno_muestra(0.5, 0.95, 0.03, 300)
tamanno_muestra(0.5, 0.95, 0.03, 30)
tamanno_muestra(0.5, 0.95, 0.03, 50)
tamanno_muestra(0.5, 0.95, 0.03, 100)
tamanno_muestra(0.5, 0.95, 0.03, 3000000)
list_sharepoint_sites()
library(Microsoft365R) # La documentación puede encontrarse aquí: https://github.com/Azure/Microsoft365R
list_sharepoint_sites()
list_sharepoint_sites()
list_sharepoint_sites()
tamanno_muestra(0.5, 0.95, 0.03, 3000000)
z <- 1.96
p <- 0.5
e <- 0.03
N <- 3000000
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
print(m)
tamanno_muestra <- function(p,c,e,N){
no=(p*(1-p))/((e/qnorm((1-c)/2))^2)
n_o=ceiling(no)
nf=n_o/(1+(n_o/N))
n_f=ceiling(nf)
return(n_f)
}
tamanno_muestra(0.5, 0.95, 0.03, 3000000)
tamanno_muestra(3000000)
tamanno_muestra <- function(N="", z=1.96, p=0.5, e=0.3){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return m
}
tamanno_muestra <- function(N=3000000, z=1.96, p=0.5, e=0.3){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return m
}
tamanno_muestra <- function(N=3000000, z=1.96, p=0.5, e=0.3){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return m
}
function(N=3000000, z=1.96, p=0.5, e=0.3){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return m
}
tamanno_muestra <- function(N=3000000, z=1.96, p=0.5, e=0.3){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return m
}
tamanno_muestra <- function(N=3000000, z=1.96, p=0.5, e=0.3){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return(m)
}
tamanno_muestra <- function(N="", z=1.96, p=0.5, e=0.3){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return(m)
}
tamanno_muestra(3000000)
print(m)
tamanno_muestra(3000000)
z <- 1.96
p <- 0.5
e <- 0.03
N <- 3000000
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
print(m)
tamanno_muestra <- function(N, z, p, e){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return(m)
}
tamanno_muestra(3000000,1.96,0.5,0.03)
tamanno_muestra <- function(N, z=1.96, p=0.5, e=0.3){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return(m)
}
tamanno_muestra(3000000)
tamanno_muestra <- function(N, z=1.96, p=0.5, e=0.03){
m <- (((z^2)*p*(1-p))/e^2)/(1+((z^2)*(p*(1-p))/((e^2)*N)))
return(m)
}
tamanno_muestra(3000000)
tamanno_muestra_2 <- function(p,c,e,N){
no=(p*(1-p))/((e/qnorm((1-c)/2))^2)
n_o=ceiling(no)
nf=n_o/(1+(n_o/N))
n_f=ceiling(nf)
return(n_f)
}
tamanno_muestra_2(0.5, 0.95, 0.03, 3000000)
tamanno_muestra(2000000)
tamanno_muestra(1000000)
tamanno_muestra(900000)
tamanno_muestra(800000)
tamanno_muestra(500000)
tamanno_muestra(100000)
tamanno_muestra(90000)
tamanno_muestra(50000)
tamanno_muestra(10000)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
help(add_cta_button)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
source("~/github/r_dfi/blastulaconmicrosoft365.R", echo=TRUE)
.libPaths()
install.packages('tinytex')
tinytex::install_tinytex()
